{"version":3,"sources":["components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/CountryPicker/CountryPicker.module.css","components/Charts/Charts.module.css","components/Cards/Cards.module.css"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","t1","gutterBottom","variant","start","end","value","duration","separator","color","Date","toDateString","t2","t3","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Charts","useState","dailyData","setDailyData","useEffect","fetchAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","length","borderColor","fill","Countries","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","fetchedData","this","CountryPicker","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ef7f94e2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data : {confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if (!confirmed) {\r\n        return (\r\n        <Grid container spacing={2} justify=\"center\">\r\n            <h4 className={styles.t3}>No Internet Connection...</h4>\r\n        </Grid>\r\n        );\r\n    }\r\n    return (\r\n        <div className={styles.container} >\r\n            <Grid container spacing={2} justify=\"center\">\r\n                <Grid item component = {Card} xs={12} md={3} className={cx(styles.card , styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography className={styles.t1} gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h4\">\r\n                            <CountUp start={0} end={confirmed.value} duration={5} separator=\",\"/>\r\n                        </Typography>\r\n                       \r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">Number of Active Cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n           \r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography className={styles.t2} gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h4\">\r\n                            <CountUp start={0} end={recovered.value} duration={5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">Number of Recovered People</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n              \r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography className={styles.t3} gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h4\">\r\n                            <CountUp start={0} end={deaths.value} duration={5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">Number of Deaths</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};","import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData } from '../../api';\r\nimport {Line , Bar} from 'react-chartjs-2';\r\nimport styles from './Charts.module.css';\r\n\r\n\r\nconst Charts = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData , setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n    \r\n        fetchAPI();\r\n    });\r\n\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [\r\n                        {\r\n                            label: 'People',\r\n                            backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                            data: [confirmed.value, recovered.value, deaths.value],\r\n                        },\r\n                    ],\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current state in ${country}` },\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n\r\n        const lineChart = (\r\n            dailyData.length \r\n            ? (\r\n                <Line \r\n                    data = {{\r\n                        labels : dailyData.map (({date}) => date),\r\n                        datasets : [{\r\n                            data : dailyData.map (({confirmed}) => confirmed),\r\n                            label : 'Infected',\r\n                            borderColor : '#3333ff',\r\n                            fill : true,\r\n                        },{\r\n                            data: dailyData.map (({ deaths }) => deaths),\r\n                            label: 'Deaths',\r\n                            borderColor: 'red',\r\n                            backgroundColor:'rgba (255, 0, 0, 0.5)',\r\n                            fill: true,\r\n                        }]\r\n                    }}\r\n                />\r\n            ) : null\r\n        )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setCountries(await fetchCountries());\r\n        };\r\n\r\n        fetchAPI();\r\n    }, [setCountries]);\r\n\r\n   /*  console.log(countries); */\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <FormControl className={styles.formControl}>\r\n                <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                    <option value=\"\">Global</option>\r\n                    {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n                </NativeSelect>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Countries;","import React from 'react';\r\nimport {Cards , Charts , CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data : { },\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount () {\r\n        const fetchedData = await fetchData();\r\n        this.setState({data: fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const data = await fetchData(country);\r\n\r\n        this.setState({ data, country: country });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { data, country } = this.state;\r\n        \r\n\r\n        return (\r\n            <div>\r\n                \r\n                <Cards className={styles.container} data={data} />\r\n                <CountryPicker className={styles.container} handleCountryChange={this.handleCountryChange} />\r\n                <Charts className={styles.container} data={data} country={country} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\n\r\nReactDOM.render(<App /> , document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__q52Zj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__2XeiQ\",\"formControl\":\"CountryPicker_formControl__20ohY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__2HJFe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2Ueoa\",\"card\":\"Cards_card__jHITb\",\"infected\":\"Cards_infected__1Ag-U\",\"recovered\":\"Cards_recovered__1J2di\",\"deaths\":\"Cards_deaths__21STB\",\"t1\":\"Cards_t1__2qEQy\",\"t2\":\"Cards_t2__2rJXf\",\"t3\":\"Cards_t3__1QC8M\"};"],"sourceRoot":""}